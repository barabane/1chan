name: 1chan

on:
    push:
        branches:
            - main

jobs:
    build:
        runs-on: ubuntu-latest
        steps:
          - name: checkout
            uses: actions/checkout@v3

          - name: set uo docker buildx
            uses: docker/setup-buildx-action@v2

          - name: build docker image 
            run: |
              docker build -t api .

          - name: run docker container
            run: |
              docker run -d --name api -p 8000:8000 api

          - name: stop and delete container
            run: |
              docker stop api
              docker rm api
    ruff:
        runs-on: ubuntu-latest
        steps:
          - name: Set up python
            uses: actions/setup-python@v3
            with:
              python-version: '3.12'

          - name: install ruff
            run: |
              python -m pip install --upgrade pip
              pip install ruff 

          - name: Ruff check
            run: ruff check .
    
    tests:
      runs-on: ubuntu-latest
      env:
        POSTGRES_NAME: ${{secrets.POSTGRES_NAME}}
        POSTGRES_USER: ${{secrets.POSTGRES_USER}}
        POSTGRES_PASS: ${{secrets.POSTGRES_PASS}}
        POSTGRES_HOST: ${{secrets.POSTGRES_HOST}}
        POSTGRES_PORT: ${{secrets.POSTGRES_PORT}}
        TEST_POSTGRES_NAME: ${{secrets.TEST_POSTGRES_NAME}}
        TEST_POSTGRES_USER: ${{secrets.TEST_POSTGRES_USER}}
        TEST_POSTGRES_PASS: ${{secrets.TEST_POSTGRES_PASS}}
        TEST_POSTGRES_HOST: ${{secrets.TEST_POSTGRES_HOST}}
        TEST_POSTGRES_PORT: ${{secrets.TEST_POSTGRES_PORT}}
        DB_POOL_SIZE: ${{secrets.DB_POOL_SIZE}}
        DB_POOL_SIZE_MAX_OVERFLOW: ${{secrets.DB_POOL_SIZE_MAX_OVERFLOW}}
        DB_POOL_TTL: ${{secrets.DB_POOL_TTL}}
        DB_POOL_PRE_PING: ${{secrets.DB_POOL_PRE_PING}}
        S3_ENDPOINT_URL: ${{secrets.S3_ENDPOINT_URL}}
        BUCKET_NAME: ${{secrets.BUCKET_NAME}}
        REGION_NAME: ${{secrets.REGION_NAME}}
        AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
        AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
      steps:
        - name: checkout
          uses: actions/checkout@v4

        - name: set up Python
          uses: actions/setup-python@v3
          with:
            python-version: 3.12

        - name: install dependencies
          run: |
              python -m pip install --upgrade pip
              pip install poetry
              poetry install

        - name: Run Pytest
          run: |
            poetry run pytest -v -s --maxfail=1 --disable-warnings
